name: Linting

on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
  schedule:
    - cron: "0 0 * * *"

env:
  DEFAULT_PYTHON: "3.10"

jobs:
  pre-commit:
    runs-on: "ubuntu-latest"
    name: Pre-commit
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"

      - name: Install Python modules
        run: |
          poetry install

      - name: Run pre-commit on all files
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure --color=always

  hacs:
    runs-on: "ubuntu-latest"
    name: HACS
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3"

      - name: HACS validation
        uses: "hacs/action@22.5.0"
        with:
          category: "integration"

  hassfest:
    runs-on: "ubuntu-latest"
    name: Hassfest
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3"

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"
  # tests:
  #   runs-on: "ubuntu-latest"
  #   name: Run tests
  #   steps:
  #     - name: Check out code from GitHub
  #       uses: "actions/checkout@v3"
  #     - name: Setup Python ${{ env.DEFAULT_PYTHON }}
  #       uses: "actions/setup-python@v4"
  #       with:
  #         python-version: ${{ env.DEFAULT_PYTHON }}
  #     - name: Install requirements
  #       run: |
  #         pip install --constraint=.github/workflows/constraints.txt pip
  #         pip install -r requirements_test.txt
  #     - name: Tests suite
  #       run: |
  #         pytest \
  #           --timeout=9 \
  #           --durations=10 \
  #           -n auto \
  #           -p no:sugar \
  #           tests
